services:
  gemini-balance:
    build: .
    container_name: gemini-balance-local
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'python -c "import requests; exit(0) if requests.get(''http://localhost:8000/health'').status_code == 200 else exit(1)"',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15
    container_name: gemini-balance-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PGSQL_DATABASE}
      POSTGRES_USER: ${PGSQL_USER}
      POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
    volumes:
      - ./pgsql_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGSQL_USER} -d ${PGSQL_DATABASE}"]
      interval: 10s # 每隔10秒检查一次
      timeout: 5s # 每次检查的超时时间为5秒
      retries: 3 # 重试3次失败后标记为 unhealthy
      start_period: 30s # 容器启动后等待30秒再开始第一次健康检查
